// Generated by view binder compiler. Do not edit!
package com.example.superid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.superid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutRecuperacaoSenhaBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnEnviarRecuperacao;

  @NonNull
  public final EditText etEmailRecuperar;

  @NonNull
  public final LinearLayout layoutRecuperar;

  @NonNull
  public final TextView tvRecuperacaoTitulo;

  private LayoutRecuperacaoSenhaBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnEnviarRecuperacao, @NonNull EditText etEmailRecuperar,
      @NonNull LinearLayout layoutRecuperar, @NonNull TextView tvRecuperacaoTitulo) {
    this.rootView = rootView;
    this.btnEnviarRecuperacao = btnEnviarRecuperacao;
    this.etEmailRecuperar = etEmailRecuperar;
    this.layoutRecuperar = layoutRecuperar;
    this.tvRecuperacaoTitulo = tvRecuperacaoTitulo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutRecuperacaoSenhaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutRecuperacaoSenhaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_recuperacao_senha, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutRecuperacaoSenhaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEnviarRecuperacao;
      Button btnEnviarRecuperacao = ViewBindings.findChildViewById(rootView, id);
      if (btnEnviarRecuperacao == null) {
        break missingId;
      }

      id = R.id.etEmailRecuperar;
      EditText etEmailRecuperar = ViewBindings.findChildViewById(rootView, id);
      if (etEmailRecuperar == null) {
        break missingId;
      }

      LinearLayout layoutRecuperar = (LinearLayout) rootView;

      id = R.id.tvRecuperacaoTitulo;
      TextView tvRecuperacaoTitulo = ViewBindings.findChildViewById(rootView, id);
      if (tvRecuperacaoTitulo == null) {
        break missingId;
      }

      return new LayoutRecuperacaoSenhaBinding((LinearLayout) rootView, btnEnviarRecuperacao,
          etEmailRecuperar, layoutRecuperar, tvRecuperacaoTitulo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
